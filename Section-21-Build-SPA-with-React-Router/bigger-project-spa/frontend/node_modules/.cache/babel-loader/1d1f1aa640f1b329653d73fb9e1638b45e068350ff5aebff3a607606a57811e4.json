{"ast":null,"code":"var _jsxFileName = \"D:\\\\KOD\\\\ReactCompleteGuide\\\\Section-21-Build-SPA-with-React-Router\\\\bigger-project-spa\\\\frontend\\\\src\\\\pages\\\\NewEventPage.jsx\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = NewEventPage;\nexport async function submitFormAction({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  data.get('title,');\n  const response = fetch(\"localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json();\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","submitFormAction","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","json","$RefreshReg$"],"sources":["D:/KOD/ReactCompleteGuide/Section-21-Build-SPA-with-React-Router/bigger-project-spa/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import EventForm from \"../components/EventForm\";\r\n\r\nexport default function NewEventPage() {\r\n  return(\r\n    <EventForm/>\r\n  );\r\n}\r\nexport async function submitFormAction({request,params}){\r\n  const data=await request.formData();\r\n  const eventData={\r\n    title:data.get('title'),\r\n    image:data.get('image'),\r\n    date:data.get('date'),\r\n    description:data.get('description')\r\n  }\r\n  data.get('title,')\r\n  const response=fetch(\"localhost:8080/events\",{\r\n    method:\"POST\",\r\n    headers:{\r\n      'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify(eventData)\r\n  })\r\n\r\n  if(!response.ok){\r\n    throw json()\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,oBACED,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhB;AAACC,EAAA,GAJuBL,YAAY;AAKpC,OAAO,eAAeM,gBAAgBA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EACtD,MAAMC,IAAI,GAAC,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACnC,MAAMC,SAAS,GAAC;IACdC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EACDJ,IAAI,CAACI,GAAG,CAAC,QAAQ,CAAC;EAClB,MAAMI,QAAQ,GAACC,KAAK,CAAC,uBAAuB,EAAC;IAC3CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAC/B,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACd,MAAMC,IAAI,CAAC,CAAC;EACd;AACF;AAAC,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}