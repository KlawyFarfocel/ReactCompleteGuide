{"ast":null,"code":"var _jsxFileName = \"D:\\\\KOD\\\\ReactCompleteGuide\\\\Section-21-Build-SPA-with-React-Router\\\\bigger-project-spa\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const data = useLoaderData();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport async function EventDetailLoader({\n  request,\n  params\n}) {\n  console.log(params.eventId);\n  const response = await fetch(`http://localhost:8080/events/${params.eventId}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n_c2 = EventDetailLoader;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventDetail\");\n$RefreshReg$(_c2, \"EventDetailLoader\");","map":{"version":3,"names":["json","useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","console","log","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","EventDetailLoader","request","params","eventId","response","fetch","ok","message","status","_c2","$RefreshReg$"],"sources":["D:/KOD/ReactCompleteGuide/Section-21-Build-SPA-with-React-Router/bigger-project-spa/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nexport default function EventDetail() {\r\n  const data = useLoaderData();\r\n  console.log(data);\r\n  return <EventItem event={data.event} />;\r\n}\r\nexport async function EventDetailLoader({ request, params }) {\r\n    console.log(params.eventId)\r\n  const response = await fetch(\r\n    `http://localhost:8080/events/${params.eventId}`\r\n  );\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event!\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5BO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,oBAAOH,OAAA,CAACF,SAAS;IAACQ,KAAK,EAAEH,IAAI,CAACG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACR,EAAA,CAJuBD,WAAW;EAAA,QACpBJ,aAAa;AAAA;AAAAc,EAAA,GADJV,WAAW;AAKnC,OAAO,eAAeW,iBAAiBA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACzDV,OAAO,CAACC,GAAG,CAACS,MAAM,CAACC,OAAO,CAAC;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,gCAA+BH,MAAM,CAACC,OAAQ,EACjD,CAAC;EACD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMtB,IAAI,CACR;MAAEuB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAACK,GAAA,GAbqBT,iBAAiB;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}