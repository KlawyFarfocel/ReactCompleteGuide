{"ast":null,"code":"var _jsxFileName = \"D:\\\\KOD\\\\ReactCompleteGuide\\\\Section-21-Build-SPA-with-React-Router\\\\bigger-project-spa\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport async function EventDetailLoader({\n  request,\n  params\n}) {\n  const response = await fetch(`http://localhost:8080/events/${params.eventId}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n_c2 = EventDetailLoader;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventDetail\");\n$RefreshReg$(_c2, \"EventDetailLoader\");","map":{"version":3,"names":["json","useLoaderData","useParams","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","EventDetailLoader","request","params","response","fetch","eventId","ok","message","status","_c2","$RefreshReg$"],"sources":["D:/KOD/ReactCompleteGuide/Section-21-Build-SPA-with-React-Router/bigger-project-spa/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import { json, useLoaderData, useParams } from \"react-router-dom\"\r\nimport EventItem from \"../components/EventItem\"\r\n\r\nexport default function EventDetail(){\r\n    const data=useLoaderData()\r\n    return(\r\n        <EventItem event={data.event}/>\r\n    )\r\n}\r\nexport async function EventDetailLoader({request, params}){\r\n    const response=await fetch(`http://localhost:8080/events/${params.eventId}`);\r\n    if(!response.ok){\r\n        throw json({message:\"Could not fetch details for selected event!\"},{status:500})\r\n    }else{\r\n        return response\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EACjC,MAAMC,IAAI,GAACP,aAAa,CAAC,CAAC;EAC1B,oBACII,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEvC;AAACN,EAAA,CALuBD,WAAW;EAAA,QACpBL,aAAa;AAAA;AAAAa,EAAA,GADJR,WAAW;AAMnC,OAAO,eAAeS,iBAAiBA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EACtD,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,gCAA+BF,MAAM,CAACG,OAAQ,EAAC,CAAC;EAC5E,IAAG,CAACF,QAAQ,CAACG,EAAE,EAAC;IACZ,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAC;IAA6C,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACpF,CAAC,MAAI;IACD,OAAOL,QAAQ;EACnB;AACJ;AAACM,GAAA,GAPqBT,iBAAiB;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}