{"ast":null,"code":"var _jsxFileName = \"D:\\\\KOD\\\\ReactCompleteGuide\\\\Section-21-Build-SPA-with-React-Router\\\\bigger-project-spa\\\\frontend\\\\src\\\\pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.message\n    }, void 0, false);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function EventLoader() {\n  const response = await fetch(\"http://localhost:8080/eventsa\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message:\"Could not fetch events!\"}),{status:500})\n    throw json({\n      message: \"Could not fetch events!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n_c2 = EventLoader;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventsPage\");\n$RefreshReg$(_c2, \"EventLoader\");","map":{"version":3,"names":["EventsList","json","useLoaderData","Fragment","_Fragment","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","EventLoader","response","fetch","ok","status","_c2","$RefreshReg$"],"sources":["D:/KOD/ReactCompleteGuide/Section-21-Build-SPA-with-React-Router/bigger-project-spa/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\n\r\nexport default function EventsPage() {\r\n  const data = useLoaderData();\r\n  if(data.isError){\r\n    return <>{data.message}</>\r\n  }\r\n  const events=data.events\r\n  return <EventsList events={events} />;\r\n}\r\nexport async function EventLoader() {\r\n  const response = await fetch(\"http://localhost:8080/eventsa\");\r\n  if (!response.ok) {\r\n   // throw new Response(JSON.stringify({message:\"Could not fetch events!\"}),{status:500})\r\n   throw json({message:\"Could not fetch events!\"},{status:500})\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,IAAGO,IAAI,CAACC,OAAO,EAAC;IACd,oBAAOJ,OAAA,CAAAF,SAAA;MAAAO,QAAA,EAAGF,IAAI,CAACG;IAAO,gBAAG,CAAC;EAC5B;EACA,MAAMC,MAAM,GAACJ,IAAI,CAACI,MAAM;EACxB,oBAAOP,OAAA,CAACN,UAAU;IAACa,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACT,EAAA,CAPuBD,UAAU;EAAA,QACnBL,aAAa;AAAA;AAAAgB,EAAA,GADJX,UAAU;AAQlC,OAAO,eAAeY,WAAWA,CAAA,EAAG;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA,MAAMrB,IAAI,CAAC;MAACW,OAAO,EAAC;IAAyB,CAAC,EAAC;MAACW,MAAM,EAAC;IAAG,CAAC,CAAC;EAC7D,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAACI,GAAA,GARqBL,WAAW;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}