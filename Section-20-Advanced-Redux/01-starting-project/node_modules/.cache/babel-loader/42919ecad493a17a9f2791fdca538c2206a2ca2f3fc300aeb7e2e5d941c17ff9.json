{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst shoppingCartInitialState = {\n  items: [],\n  isVisible: false\n};\nconst shoppingCartSlice = createSlice({\n  name: \"cart\",\n  initialState: shoppingCartInitialState,\n  reducers: {\n    toggleCart(state) {\n      state.isVisible = !state.isVisible;\n    },\n    addToCart(state, action) {\n      state.items = [...state.items, {\n        title: action.payload.title,\n        price: action.payload.price,\n        total: action.payload.total,\n        quantity: 1\n      }];\n    },\n    increaseAmount(state, action) {\n      const selectedProduct = state.items.filter(item => item.name === action.payload.name);\n      const restItems = state.items.filter(item => item.name !== action.payload.name);\n      // state.items[action.payload.id].quantity++\n    }\n    // decreaseAmount(state,action){\n    //     if(state.items[action.payload.id].quantity===1){\n    //         state.items=state.items.filter(item=>item.name!==)\n    //     }\n    // }\n  }\n});\n\nexport default shoppingCartSlice.reducer;\nexport const cartActions = shoppingCartSlice.actions;","map":{"version":3,"names":["createSlice","shoppingCartInitialState","items","isVisible","shoppingCartSlice","name","initialState","reducers","toggleCart","state","addToCart","action","title","payload","price","total","quantity","increaseAmount","selectedProduct","filter","item","restItems","reducer","cartActions","actions"],"sources":["D:/KOD/ReactCompleteGuide/Section-20-Advanced-Redux/01-starting-project/src/store/shoppingCartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\nconst shoppingCartInitialState={\r\n    items:[],\r\n    isVisible:false\r\n}\r\nconst shoppingCartSlice=createSlice({\r\n    name:\"cart\",\r\n    initialState:shoppingCartInitialState,\r\n    reducers:{\r\n        toggleCart(state){\r\n            state.isVisible=!state.isVisible\r\n        },\r\n        addToCart(state,action){\r\n            state.items=[...state.items,{title:action.payload.title,price:action.payload.price,total:action.payload.total,quantity:1}]\r\n        },\r\n        increaseAmount(state,action){\r\n            const selectedProduct=state.items.filter(item=>item.name===action.payload.name)\r\n            const restItems=state.items.filter(item=>item.name!==action.payload.name)\r\n           // state.items[action.payload.id].quantity++\r\n        },\r\n        // decreaseAmount(state,action){\r\n        //     if(state.items[action.payload.id].quantity===1){\r\n        //         state.items=state.items.filter(item=>item.name!==)\r\n        //     }\r\n        // }\r\n    }\r\n})\r\nexport default shoppingCartSlice.reducer\r\nexport const cartActions=shoppingCartSlice.actions;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,MAAMC,wBAAwB,GAAC;EAC3BC,KAAK,EAAC,EAAE;EACRC,SAAS,EAAC;AACd,CAAC;AACD,MAAMC,iBAAiB,GAACJ,WAAW,CAAC;EAChCK,IAAI,EAAC,MAAM;EACXC,YAAY,EAACL,wBAAwB;EACrCM,QAAQ,EAAC;IACLC,UAAUA,CAACC,KAAK,EAAC;MACbA,KAAK,CAACN,SAAS,GAAC,CAACM,KAAK,CAACN,SAAS;IACpC,CAAC;IACDO,SAASA,CAACD,KAAK,EAACE,MAAM,EAAC;MACnBF,KAAK,CAACP,KAAK,GAAC,CAAC,GAAGO,KAAK,CAACP,KAAK,EAAC;QAACU,KAAK,EAACD,MAAM,CAACE,OAAO,CAACD,KAAK;QAACE,KAAK,EAACH,MAAM,CAACE,OAAO,CAACC,KAAK;QAACC,KAAK,EAACJ,MAAM,CAACE,OAAO,CAACE,KAAK;QAACC,QAAQ,EAAC;MAAC,CAAC,CAAC;IAC9H,CAAC;IACDC,cAAcA,CAACR,KAAK,EAACE,MAAM,EAAC;MACxB,MAAMO,eAAe,GAACT,KAAK,CAACP,KAAK,CAACiB,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACf,IAAI,KAAGM,MAAM,CAACE,OAAO,CAACR,IAAI,CAAC;MAC/E,MAAMgB,SAAS,GAACZ,KAAK,CAACP,KAAK,CAACiB,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACf,IAAI,KAAGM,MAAM,CAACE,OAAO,CAACR,IAAI,CAAC;MAC1E;IACH;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ,CAAC,CAAC;;AACF,eAAeD,iBAAiB,CAACkB,OAAO;AACxC,OAAO,MAAMC,WAAW,GAACnB,iBAAiB,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}